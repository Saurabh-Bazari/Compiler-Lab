Grammar

    0 $accept: funcs $end

    1 funcs: func funcs
    2      | func

    3 func: FUNC BEGINN funcname intm_code FUNC END

    4 funcname: var_ID

    5 intm_code: %empty
    6          | intm_code intm_line

    7 intm_line: binary_operation
    8          | assignment
    9          | jump_Cond
   10          | jump_unCond
   11          | label
   12          | arr_decl_stmt
   13          | args_stmt
   14          | param_stmt
   15          | refparam_stmt
   16          | call_stmt
   17          | return_stmt
   18          | print_stmt
   19          | scan_stmt

   20 scan_stmt: READD var_ID

   21 print_stmt: PRINTT id_or_num
   22           | PRINTT stringgg

   23 binary_operation: var_ID EQ id_or_num arith_rel_ops id_or_num

   24 id_or_num: var_ID
   25          | num

   26 arith_rel_ops: ARITH_REL_OPS

   27 var_ID: ID

   28 num: INT
   29    | FLOAT

   30 stringgg: STRINGG

   31 assignment: var_ID EQ var_ID
   32           | var_ID EQ num

   33 label: LABEL

   34 jump_Cond: IF var_ID GOTO var_ID
   35          | IF num GOTO var_ID

   36 jump_unCond: GOTO var_ID

   37 args_stmt: ARGS var_ID

   38 arr_decl_stmt: DECL var_ID

   39 param_stmt: PARAM id_or_num

   40 return_stmt: RETURN ret_val

   41 ret_val: NULLL
   42        | id_or_num

   43 refparam_stmt: REFPARAM var_ID

   44 call_stmt: CALL var_ID


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 28
FLOAT (259) 29
ID (260) 27
EQ (261) 23 31 32
DECL (262) 38
ARITH_REL_OPS (263) 26
IF (264) 34 35
GOTO (265) 34 35 36
LABEL (266) 33
PRINTT (267) 21 22
STRINGG (268) 30
READD (269) 20
FUNC (270) 3
BEGINN (271) 3
RETURN (272) 40
END (273) 3
PARAM (274) 39
REFPARAM (275) 43
CALL (276) 44
ARGS (277) 37
NULLL (278) 41


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
funcs (25)
    on left: 1 2, on right: 0 1
func (26)
    on left: 3, on right: 1 2
funcname (27)
    on left: 4, on right: 3
intm_code (28)
    on left: 5 6, on right: 3 6
intm_line (29)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19, on right: 6
scan_stmt (30)
    on left: 20, on right: 19
print_stmt (31)
    on left: 21 22, on right: 18
binary_operation (32)
    on left: 23, on right: 7
id_or_num (33)
    on left: 24 25, on right: 21 23 39 42
arith_rel_ops (34)
    on left: 26, on right: 23
var_ID (35)
    on left: 27, on right: 4 20 23 24 31 32 34 35 36 37 38 43 44
num (36)
    on left: 28 29, on right: 25 32 35
stringgg (37)
    on left: 30, on right: 22
assignment (38)
    on left: 31 32, on right: 8
label (39)
    on left: 33, on right: 11
jump_Cond (40)
    on left: 34 35, on right: 9
jump_unCond (41)
    on left: 36, on right: 10
args_stmt (42)
    on left: 37, on right: 13
arr_decl_stmt (43)
    on left: 38, on right: 12
param_stmt (44)
    on left: 39, on right: 14
return_stmt (45)
    on left: 40, on right: 17
ret_val (46)
    on left: 41 42, on right: 40
refparam_stmt (47)
    on left: 43, on right: 15
call_stmt (48)
    on left: 44, on right: 16


State 0

    0 $accept: . funcs $end

    FUNC  shift, and go to state 1

    funcs  go to state 2
    func   go to state 3


State 1

    3 func: FUNC . BEGINN funcname intm_code FUNC END

    BEGINN  shift, and go to state 4


State 2

    0 $accept: funcs . $end

    $end  shift, and go to state 5


State 3

    1 funcs: func . funcs
    2      | func .

    FUNC  shift, and go to state 1

    $default  reduce using rule 2 (funcs)

    funcs  go to state 6
    func   go to state 3


State 4

    3 func: FUNC BEGINN . funcname intm_code FUNC END

    ID  shift, and go to state 7

    funcname  go to state 8
    var_ID    go to state 9


State 5

    0 $accept: funcs $end .

    $default  accept


State 6

    1 funcs: func funcs .

    $default  reduce using rule 1 (funcs)


State 7

   27 var_ID: ID .

    $default  reduce using rule 27 (var_ID)


State 8

    3 func: FUNC BEGINN funcname . intm_code FUNC END

    $default  reduce using rule 5 (intm_code)

    intm_code  go to state 10


State 9

    4 funcname: var_ID .

    $default  reduce using rule 4 (funcname)


State 10

    3 func: FUNC BEGINN funcname intm_code . FUNC END
    6 intm_code: intm_code . intm_line

    ID        shift, and go to state 7
    DECL      shift, and go to state 11
    IF        shift, and go to state 12
    GOTO      shift, and go to state 13
    LABEL     shift, and go to state 14
    PRINTT    shift, and go to state 15
    READD     shift, and go to state 16
    FUNC      shift, and go to state 17
    RETURN    shift, and go to state 18
    PARAM     shift, and go to state 19
    REFPARAM  shift, and go to state 20
    CALL      shift, and go to state 21
    ARGS      shift, and go to state 22

    intm_line         go to state 23
    scan_stmt         go to state 24
    print_stmt        go to state 25
    binary_operation  go to state 26
    var_ID            go to state 27
    assignment        go to state 28
    label             go to state 29
    jump_Cond         go to state 30
    jump_unCond       go to state 31
    args_stmt         go to state 32
    arr_decl_stmt     go to state 33
    param_stmt        go to state 34
    return_stmt       go to state 35
    refparam_stmt     go to state 36
    call_stmt         go to state 37


State 11

   38 arr_decl_stmt: DECL . var_ID

    ID  shift, and go to state 7

    var_ID  go to state 38


State 12

   34 jump_Cond: IF . var_ID GOTO var_ID
   35          | IF . num GOTO var_ID

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40
    ID     shift, and go to state 7

    var_ID  go to state 41
    num     go to state 42


State 13

   36 jump_unCond: GOTO . var_ID

    ID  shift, and go to state 7

    var_ID  go to state 43


State 14

   33 label: LABEL .

    $default  reduce using rule 33 (label)


State 15

   21 print_stmt: PRINTT . id_or_num
   22           | PRINTT . stringgg

    INT      shift, and go to state 39
    FLOAT    shift, and go to state 40
    ID       shift, and go to state 7
    STRINGG  shift, and go to state 44

    id_or_num  go to state 45
    var_ID     go to state 46
    num        go to state 47
    stringgg   go to state 48


State 16

   20 scan_stmt: READD . var_ID

    ID  shift, and go to state 7

    var_ID  go to state 49


State 17

    3 func: FUNC BEGINN funcname intm_code FUNC . END

    END  shift, and go to state 50


State 18

   40 return_stmt: RETURN . ret_val

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40
    ID     shift, and go to state 7
    NULLL  shift, and go to state 51

    id_or_num  go to state 52
    var_ID     go to state 46
    num        go to state 47
    ret_val    go to state 53


State 19

   39 param_stmt: PARAM . id_or_num

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40
    ID     shift, and go to state 7

    id_or_num  go to state 54
    var_ID     go to state 46
    num        go to state 47


State 20

   43 refparam_stmt: REFPARAM . var_ID

    ID  shift, and go to state 7

    var_ID  go to state 55


State 21

   44 call_stmt: CALL . var_ID

    ID  shift, and go to state 7

    var_ID  go to state 56


State 22

   37 args_stmt: ARGS . var_ID

    ID  shift, and go to state 7

    var_ID  go to state 57


State 23

    6 intm_code: intm_code intm_line .

    $default  reduce using rule 6 (intm_code)


State 24

   19 intm_line: scan_stmt .

    $default  reduce using rule 19 (intm_line)


State 25

   18 intm_line: print_stmt .

    $default  reduce using rule 18 (intm_line)


State 26

    7 intm_line: binary_operation .

    $default  reduce using rule 7 (intm_line)


State 27

   23 binary_operation: var_ID . EQ id_or_num arith_rel_ops id_or_num
   31 assignment: var_ID . EQ var_ID
   32           | var_ID . EQ num

    EQ  shift, and go to state 58


State 28

    8 intm_line: assignment .

    $default  reduce using rule 8 (intm_line)


State 29

   11 intm_line: label .

    $default  reduce using rule 11 (intm_line)


State 30

    9 intm_line: jump_Cond .

    $default  reduce using rule 9 (intm_line)


State 31

   10 intm_line: jump_unCond .

    $default  reduce using rule 10 (intm_line)


State 32

   13 intm_line: args_stmt .

    $default  reduce using rule 13 (intm_line)


State 33

   12 intm_line: arr_decl_stmt .

    $default  reduce using rule 12 (intm_line)


State 34

   14 intm_line: param_stmt .

    $default  reduce using rule 14 (intm_line)


State 35

   17 intm_line: return_stmt .

    $default  reduce using rule 17 (intm_line)


State 36

   15 intm_line: refparam_stmt .

    $default  reduce using rule 15 (intm_line)


State 37

   16 intm_line: call_stmt .

    $default  reduce using rule 16 (intm_line)


State 38

   38 arr_decl_stmt: DECL var_ID .

    $default  reduce using rule 38 (arr_decl_stmt)


State 39

   28 num: INT .

    $default  reduce using rule 28 (num)


State 40

   29 num: FLOAT .

    $default  reduce using rule 29 (num)


State 41

   34 jump_Cond: IF var_ID . GOTO var_ID

    GOTO  shift, and go to state 59


State 42

   35 jump_Cond: IF num . GOTO var_ID

    GOTO  shift, and go to state 60


State 43

   36 jump_unCond: GOTO var_ID .

    $default  reduce using rule 36 (jump_unCond)


State 44

   30 stringgg: STRINGG .

    $default  reduce using rule 30 (stringgg)


State 45

   21 print_stmt: PRINTT id_or_num .

    $default  reduce using rule 21 (print_stmt)


State 46

   24 id_or_num: var_ID .

    $default  reduce using rule 24 (id_or_num)


State 47

   25 id_or_num: num .

    $default  reduce using rule 25 (id_or_num)


State 48

   22 print_stmt: PRINTT stringgg .

    $default  reduce using rule 22 (print_stmt)


State 49

   20 scan_stmt: READD var_ID .

    $default  reduce using rule 20 (scan_stmt)


State 50

    3 func: FUNC BEGINN funcname intm_code FUNC END .

    $default  reduce using rule 3 (func)


State 51

   41 ret_val: NULLL .

    $default  reduce using rule 41 (ret_val)


State 52

   42 ret_val: id_or_num .

    $default  reduce using rule 42 (ret_val)


State 53

   40 return_stmt: RETURN ret_val .

    $default  reduce using rule 40 (return_stmt)


State 54

   39 param_stmt: PARAM id_or_num .

    $default  reduce using rule 39 (param_stmt)


State 55

   43 refparam_stmt: REFPARAM var_ID .

    $default  reduce using rule 43 (refparam_stmt)


State 56

   44 call_stmt: CALL var_ID .

    $default  reduce using rule 44 (call_stmt)


State 57

   37 args_stmt: ARGS var_ID .

    $default  reduce using rule 37 (args_stmt)


State 58

   23 binary_operation: var_ID EQ . id_or_num arith_rel_ops id_or_num
   31 assignment: var_ID EQ . var_ID
   32           | var_ID EQ . num

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40
    ID     shift, and go to state 7

    id_or_num  go to state 61
    var_ID     go to state 62
    num        go to state 63


State 59

   34 jump_Cond: IF var_ID GOTO . var_ID

    ID  shift, and go to state 7

    var_ID  go to state 64


State 60

   35 jump_Cond: IF num GOTO . var_ID

    ID  shift, and go to state 7

    var_ID  go to state 65


State 61

   23 binary_operation: var_ID EQ id_or_num . arith_rel_ops id_or_num

    ARITH_REL_OPS  shift, and go to state 66

    arith_rel_ops  go to state 67


State 62

   24 id_or_num: var_ID .
   31 assignment: var_ID EQ var_ID .

    ARITH_REL_OPS  reduce using rule 24 (id_or_num)
    $default       reduce using rule 31 (assignment)


State 63

   25 id_or_num: num .
   32 assignment: var_ID EQ num .

    ARITH_REL_OPS  reduce using rule 25 (id_or_num)
    $default       reduce using rule 32 (assignment)


State 64

   34 jump_Cond: IF var_ID GOTO var_ID .

    $default  reduce using rule 34 (jump_Cond)


State 65

   35 jump_Cond: IF num GOTO var_ID .

    $default  reduce using rule 35 (jump_Cond)


State 66

   26 arith_rel_ops: ARITH_REL_OPS .

    $default  reduce using rule 26 (arith_rel_ops)


State 67

   23 binary_operation: var_ID EQ id_or_num arith_rel_ops . id_or_num

    INT    shift, and go to state 39
    FLOAT  shift, and go to state 40
    ID     shift, and go to state 7

    id_or_num  go to state 68
    var_ID     go to state 46
    num        go to state 47


State 68

   23 binary_operation: var_ID EQ id_or_num arith_rel_ops id_or_num .

    $default  reduce using rule 23 (binary_operation)
