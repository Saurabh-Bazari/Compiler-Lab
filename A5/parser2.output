
Grammar
rule 1    funcs -> func funcs
rule 2    funcs -> func
rule 3    func -> FUNC BEGINN funcname intm_code FUNC END
rule 4    funcname -> var_ID
rule 5    intm_code ->		/* empty */
rule 6    intm_code -> intm_code intm_line
rule 7    intm_line -> binary_operation
rule 8    intm_line -> assignment
rule 9    intm_line -> jump_Cond
rule 10   intm_line -> jump_unCond
rule 11   intm_line -> label
rule 12   intm_line -> arr_decl_stmt
rule 13   intm_line -> args_stmt
rule 14   intm_line -> param_stmt
rule 15   intm_line -> refparam_stmt
rule 16   intm_line -> call_stmt
rule 17   intm_line -> return_stmt
rule 18   intm_line -> print_stmt
rule 19   intm_line -> scan_stmt
rule 20   scan_stmt -> READD var_ID
rule 21   print_stmt -> PRINTT id_or_num
rule 22   print_stmt -> PRINTT stringgg
rule 23   binary_operation -> var_ID EQ id_or_num arith_rel_ops id_or_num
rule 24   id_or_num -> var_ID
rule 25   id_or_num -> num
rule 26   arith_rel_ops -> ARITH_REL_OPS
rule 27   var_ID -> ID
rule 28   num -> INT
rule 29   num -> FLOAT
rule 30   stringgg -> STRINGG
rule 31   assignment -> var_ID EQ var_ID
rule 32   assignment -> var_ID EQ num
rule 33   label -> LABEL
rule 34   jump_Cond -> IF var_ID GOTO var_ID
rule 35   jump_Cond -> IF num GOTO var_ID
rule 36   jump_unCond -> GOTO var_ID
rule 37   args_stmt -> ARGS var_ID
rule 38   arr_decl_stmt -> DECL var_ID
rule 39   param_stmt -> PARAM id_or_num
rule 40   return_stmt -> RETURN ret_val
rule 41   ret_val -> NULLL
rule 42   ret_val -> id_or_num
rule 43   refparam_stmt -> REFPARAM var_ID
rule 44   call_stmt -> CALL var_ID

Terminals, with rules where they appear

$ (-1)
error (256)
INT (258) 28
FLOAT (259) 29
ID (260) 27
EQ (261) 23 31 32
DECL (262) 38
ARITH_REL_OPS (263) 26
IF (264) 34 35
GOTO (265) 34 35 36
LABEL (266) 33
PRINTT (267) 21 22
STRINGG (268) 30
READD (269) 20
FUNC (270) 3
BEGINN (271) 3
RETURN (272) 40
END (273) 3
PARAM (274) 39
REFPARAM (275) 43
CALL (276) 44
ARGS (277) 37
NULLL (278) 41

Nonterminals, with rules where they appear

funcs (24)
    on left: 1 2, on right: 1
func (25)
    on left: 3, on right: 1 2
funcname (26)
    on left: 4, on right: 3
intm_code (27)
    on left: 5 6, on right: 3 6
intm_line (28)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19, on right: 6
scan_stmt (29)
    on left: 20, on right: 19
print_stmt (30)
    on left: 21 22, on right: 18
binary_operation (31)
    on left: 23, on right: 7
id_or_num (32)
    on left: 24 25, on right: 21 23 39 42
arith_rel_ops (33)
    on left: 26, on right: 23
var_ID (34)
    on left: 27, on right: 4 20 23 24 31 32 34 35 36 37 38 43 44
num (35)
    on left: 28 29, on right: 25 32 35
stringgg (36)
    on left: 30, on right: 22
assignment (37)
    on left: 31 32, on right: 8
label (38)
    on left: 33, on right: 11
jump_Cond (39)
    on left: 34 35, on right: 9
jump_unCond (40)
    on left: 36, on right: 10
args_stmt (41)
    on left: 37, on right: 13
arr_decl_stmt (42)
    on left: 38, on right: 12
param_stmt (43)
    on left: 39, on right: 14
return_stmt (44)
    on left: 40, on right: 17
ret_val (45)
    on left: 41 42, on right: 40
refparam_stmt (46)
    on left: 43, on right: 15
call_stmt (47)
    on left: 44, on right: 16


state 0

    FUNC	shift, and go to state 1

    funcs	go to state 67
    func	go to state 2



state 1

    func  ->  FUNC . BEGINN funcname intm_code FUNC END   (rule 3)

    BEGINN	shift, and go to state 3



state 2

    funcs  ->  func . funcs   (rule 1)
    funcs  ->  func .   (rule 2)

    FUNC	shift, and go to state 1

    $default	reduce using rule 2 (funcs)

    funcs	go to state 4
    func	go to state 2



state 3

    func  ->  FUNC BEGINN . funcname intm_code FUNC END   (rule 3)

    ID  	shift, and go to state 5

    funcname	go to state 6
    var_ID	go to state 7



state 4

    funcs  ->  func funcs .   (rule 1)

    $default	reduce using rule 1 (funcs)



state 5

    var_ID  ->  ID .   (rule 27)

    $default	reduce using rule 27 (var_ID)



state 6

    func  ->  FUNC BEGINN funcname . intm_code FUNC END   (rule 3)

    $default	reduce using rule 5 (intm_code)

    intm_code	go to state 8



state 7

    funcname  ->  var_ID .   (rule 4)

    $default	reduce using rule 4 (funcname)



state 8

    func  ->  FUNC BEGINN funcname intm_code . FUNC END   (rule 3)
    intm_code  ->  intm_code . intm_line   (rule 6)

    ID  	shift, and go to state 5
    DECL	shift, and go to state 9
    IF  	shift, and go to state 10
    GOTO	shift, and go to state 11
    LABEL	shift, and go to state 12
    PRINTT	shift, and go to state 13
    READD	shift, and go to state 14
    FUNC	shift, and go to state 15
    RETURN	shift, and go to state 16
    PARAM	shift, and go to state 17
    REFPARAM	shift, and go to state 18
    CALL	shift, and go to state 19
    ARGS	shift, and go to state 20

    intm_line	go to state 21
    scan_stmt	go to state 22
    print_stmt	go to state 23
    binary_operation	go to state 24
    var_ID	go to state 25
    assignment	go to state 26
    label	go to state 27
    jump_Cond	go to state 28
    jump_unCond	go to state 29
    args_stmt	go to state 30
    arr_decl_stmt	go to state 31
    param_stmt	go to state 32
    return_stmt	go to state 33
    refparam_stmt	go to state 34
    call_stmt	go to state 35



state 9

    arr_decl_stmt  ->  DECL . var_ID   (rule 38)

    ID  	shift, and go to state 5

    var_ID	go to state 36



state 10

    jump_Cond  ->  IF . var_ID GOTO var_ID   (rule 34)
    jump_Cond  ->  IF . num GOTO var_ID   (rule 35)

    INT 	shift, and go to state 37
    FLOAT	shift, and go to state 38
    ID  	shift, and go to state 5

    var_ID	go to state 39
    num 	go to state 40



state 11

    jump_unCond  ->  GOTO . var_ID   (rule 36)

    ID  	shift, and go to state 5

    var_ID	go to state 41



state 12

    label  ->  LABEL .   (rule 33)

    $default	reduce using rule 33 (label)



state 13

    print_stmt  ->  PRINTT . id_or_num   (rule 21)
    print_stmt  ->  PRINTT . stringgg   (rule 22)

    INT 	shift, and go to state 37
    FLOAT	shift, and go to state 38
    ID  	shift, and go to state 5
    STRINGG	shift, and go to state 42

    id_or_num	go to state 43
    var_ID	go to state 44
    num 	go to state 45
    stringgg	go to state 46



state 14

    scan_stmt  ->  READD . var_ID   (rule 20)

    ID  	shift, and go to state 5

    var_ID	go to state 47



state 15

    func  ->  FUNC BEGINN funcname intm_code FUNC . END   (rule 3)

    END 	shift, and go to state 48



state 16

    return_stmt  ->  RETURN . ret_val   (rule 40)

    INT 	shift, and go to state 37
    FLOAT	shift, and go to state 38
    ID  	shift, and go to state 5
    NULLL	shift, and go to state 49

    id_or_num	go to state 50
    var_ID	go to state 44
    num 	go to state 45
    ret_val	go to state 51



state 17

    param_stmt  ->  PARAM . id_or_num   (rule 39)

    INT 	shift, and go to state 37
    FLOAT	shift, and go to state 38
    ID  	shift, and go to state 5

    id_or_num	go to state 52
    var_ID	go to state 44
    num 	go to state 45



state 18

    refparam_stmt  ->  REFPARAM . var_ID   (rule 43)

    ID  	shift, and go to state 5

    var_ID	go to state 53



state 19

    call_stmt  ->  CALL . var_ID   (rule 44)

    ID  	shift, and go to state 5

    var_ID	go to state 54



state 20

    args_stmt  ->  ARGS . var_ID   (rule 37)

    ID  	shift, and go to state 5

    var_ID	go to state 55



state 21

    intm_code  ->  intm_code intm_line .   (rule 6)

    $default	reduce using rule 6 (intm_code)



state 22

    intm_line  ->  scan_stmt .   (rule 19)

    $default	reduce using rule 19 (intm_line)



state 23

    intm_line  ->  print_stmt .   (rule 18)

    $default	reduce using rule 18 (intm_line)



state 24

    intm_line  ->  binary_operation .   (rule 7)

    $default	reduce using rule 7 (intm_line)



state 25

    binary_operation  ->  var_ID . EQ id_or_num arith_rel_ops id_or_num   (rule 23)
    assignment  ->  var_ID . EQ var_ID   (rule 31)
    assignment  ->  var_ID . EQ num   (rule 32)

    EQ  	shift, and go to state 56



state 26

    intm_line  ->  assignment .   (rule 8)

    $default	reduce using rule 8 (intm_line)



state 27

    intm_line  ->  label .   (rule 11)

    $default	reduce using rule 11 (intm_line)



state 28

    intm_line  ->  jump_Cond .   (rule 9)

    $default	reduce using rule 9 (intm_line)



state 29

    intm_line  ->  jump_unCond .   (rule 10)

    $default	reduce using rule 10 (intm_line)



state 30

    intm_line  ->  args_stmt .   (rule 13)

    $default	reduce using rule 13 (intm_line)



state 31

    intm_line  ->  arr_decl_stmt .   (rule 12)

    $default	reduce using rule 12 (intm_line)



state 32

    intm_line  ->  param_stmt .   (rule 14)

    $default	reduce using rule 14 (intm_line)



state 33

    intm_line  ->  return_stmt .   (rule 17)

    $default	reduce using rule 17 (intm_line)



state 34

    intm_line  ->  refparam_stmt .   (rule 15)

    $default	reduce using rule 15 (intm_line)



state 35

    intm_line  ->  call_stmt .   (rule 16)

    $default	reduce using rule 16 (intm_line)



state 36

    arr_decl_stmt  ->  DECL var_ID .   (rule 38)

    $default	reduce using rule 38 (arr_decl_stmt)



state 37

    num  ->  INT .   (rule 28)

    $default	reduce using rule 28 (num)



state 38

    num  ->  FLOAT .   (rule 29)

    $default	reduce using rule 29 (num)



state 39

    jump_Cond  ->  IF var_ID . GOTO var_ID   (rule 34)

    GOTO	shift, and go to state 57



state 40

    jump_Cond  ->  IF num . GOTO var_ID   (rule 35)

    GOTO	shift, and go to state 58



state 41

    jump_unCond  ->  GOTO var_ID .   (rule 36)

    $default	reduce using rule 36 (jump_unCond)



state 42

    stringgg  ->  STRINGG .   (rule 30)

    $default	reduce using rule 30 (stringgg)



state 43

    print_stmt  ->  PRINTT id_or_num .   (rule 21)

    $default	reduce using rule 21 (print_stmt)



state 44

    id_or_num  ->  var_ID .   (rule 24)

    $default	reduce using rule 24 (id_or_num)



state 45

    id_or_num  ->  num .   (rule 25)

    $default	reduce using rule 25 (id_or_num)



state 46

    print_stmt  ->  PRINTT stringgg .   (rule 22)

    $default	reduce using rule 22 (print_stmt)



state 47

    scan_stmt  ->  READD var_ID .   (rule 20)

    $default	reduce using rule 20 (scan_stmt)



state 48

    func  ->  FUNC BEGINN funcname intm_code FUNC END .   (rule 3)

    $default	reduce using rule 3 (func)



state 49

    ret_val  ->  NULLL .   (rule 41)

    $default	reduce using rule 41 (ret_val)



state 50

    ret_val  ->  id_or_num .   (rule 42)

    $default	reduce using rule 42 (ret_val)



state 51

    return_stmt  ->  RETURN ret_val .   (rule 40)

    $default	reduce using rule 40 (return_stmt)



state 52

    param_stmt  ->  PARAM id_or_num .   (rule 39)

    $default	reduce using rule 39 (param_stmt)



state 53

    refparam_stmt  ->  REFPARAM var_ID .   (rule 43)

    $default	reduce using rule 43 (refparam_stmt)



state 54

    call_stmt  ->  CALL var_ID .   (rule 44)

    $default	reduce using rule 44 (call_stmt)



state 55

    args_stmt  ->  ARGS var_ID .   (rule 37)

    $default	reduce using rule 37 (args_stmt)



state 56

    binary_operation  ->  var_ID EQ . id_or_num arith_rel_ops id_or_num   (rule 23)
    assignment  ->  var_ID EQ . var_ID   (rule 31)
    assignment  ->  var_ID EQ . num   (rule 32)

    INT 	shift, and go to state 37
    FLOAT	shift, and go to state 38
    ID  	shift, and go to state 5

    id_or_num	go to state 59
    var_ID	go to state 60
    num 	go to state 61



state 57

    jump_Cond  ->  IF var_ID GOTO . var_ID   (rule 34)

    ID  	shift, and go to state 5

    var_ID	go to state 62



state 58

    jump_Cond  ->  IF num GOTO . var_ID   (rule 35)

    ID  	shift, and go to state 5

    var_ID	go to state 63



state 59

    binary_operation  ->  var_ID EQ id_or_num . arith_rel_ops id_or_num   (rule 23)

    ARITH_REL_OPS	shift, and go to state 64

    arith_rel_ops	go to state 65



state 60

    id_or_num  ->  var_ID .   (rule 24)
    assignment  ->  var_ID EQ var_ID .   (rule 31)

    ARITH_REL_OPS	reduce using rule 24 (id_or_num)
    $default	reduce using rule 31 (assignment)



state 61

    id_or_num  ->  num .   (rule 25)
    assignment  ->  var_ID EQ num .   (rule 32)

    ARITH_REL_OPS	reduce using rule 25 (id_or_num)
    $default	reduce using rule 32 (assignment)



state 62

    jump_Cond  ->  IF var_ID GOTO var_ID .   (rule 34)

    $default	reduce using rule 34 (jump_Cond)



state 63

    jump_Cond  ->  IF num GOTO var_ID .   (rule 35)

    $default	reduce using rule 35 (jump_Cond)



state 64

    arith_rel_ops  ->  ARITH_REL_OPS .   (rule 26)

    $default	reduce using rule 26 (arith_rel_ops)



state 65

    binary_operation  ->  var_ID EQ id_or_num arith_rel_ops . id_or_num   (rule 23)

    INT 	shift, and go to state 37
    FLOAT	shift, and go to state 38
    ID  	shift, and go to state 5

    id_or_num	go to state 66
    var_ID	go to state 44
    num 	go to state 45



state 66

    binary_operation  ->  var_ID EQ id_or_num arith_rel_ops id_or_num .   (rule 23)

    $default	reduce using rule 23 (binary_operation)



state 67

    $   	go to state 68



state 68

    $   	go to state 69



state 69

    $default	accept
